{"ast":null,"code":"var _jsxFileName = \"/Users/snewell/Documents/practice/React_shop/react-shop/src/Basket/basket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BasketItem from \"./basketItem\";\nimport \"./basket.css\";\n\n// I think there should be a much better way to flag when an items qutity needs to be increased\n// I don't like the idea of creating an additional prop just to flag an external quantity increase\n// nothing I tried within the items.map() worked how I hoped\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Basket = props => {\n  _s();\n  const {\n    showBasket,\n    items,\n    removeFromBasket,\n    emptyCart,\n    duplicateFound\n  } = props;\n  const [show, setShow] = useState(\"hidden\");\n  useEffect(() => {\n    if (showBasket) {\n      setShow(\"show\");\n    } else {\n      setShow(\"hidden\");\n    }\n  }, [showBasket]);\n  const stateYourNameCuz = id => {\n    console.log(id, \" init\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `basket-container ${show}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"basket-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Basket \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), !items.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nothing-text\",\n        children: \"There's nothing here yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"basket-clear-all-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": \"empty cart\",\n            className: \"button-with-text\",\n            onClick: () => emptyCart(),\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-container\",\n          children: [stateYourNameCuz(item.id), /*#__PURE__*/_jsxDEV(BasketItem, {\n            duplicateFound: duplicateFound,\n            item: item,\n            removeFromBasket: removeFromBasket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Basket, \"brs+fiyqwr5+uJ7vmvGPncwLGkY=\");\n_c = Basket;\nexport default Basket;\nvar _c;\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"names":["React","useEffect","useState","BasketItem","Basket","props","showBasket","items","removeFromBasket","emptyCart","duplicateFound","show","setShow","stateYourNameCuz","id","console","log","length","map","item","index"],"sources":["/Users/snewell/Documents/practice/React_shop/react-shop/src/Basket/basket.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BasketItem from \"./basketItem\";\nimport \"./basket.css\";\n\n// I think there should be a much better way to flag when an items qutity needs to be increased\n// I don't like the idea of creating an additional prop just to flag an external quantity increase\n// nothing I tried within the items.map() worked how I hoped\n\nconst Basket = (props) => {\n  const { showBasket, items, removeFromBasket, emptyCart, duplicateFound } =\n    props;\n  const [show, setShow] = useState(\"hidden\");\n\n  useEffect(() => {\n    if (showBasket) {\n      setShow(\"show\");\n    } else {\n      setShow(\"hidden\");\n    }\n  }, [showBasket]);\n\n  const stateYourNameCuz = (id) => {\n    console.log(id, \" init\")\n  }\n\n  return (\n    <>\n      <div className={`basket-container ${show}`}>\n        <span className=\"basket-title\">\n          <h2> Basket </h2>\n        </span>\n        {!items.length ? (\n          <div className=\"nothing-text\">There's nothing here yet</div>\n        ) : (\n          <>\n            <div className=\"basket-clear-all-button\">\n              <button\n                aria-label=\"empty cart\"\n                className=\"button-with-text\"\n                onClick={() => emptyCart()}\n              >\n                Clear All\n              </button>\n            </div>\n            {items.map((item, index) => (\n              <div key={item.id} className=\"item-container\">\n                {stateYourNameCuz(item.id)}\n                <BasketItem\n                  duplicateFound={duplicateFound}\n                  item={item}\n                  removeFromBasket={removeFromBasket}\n                />\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Basket;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,cAAc;;AAErB;AACA;AACA;AAAA;AAAA;AAEA,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM;IAAEC,UAAU;IAAEC,KAAK;IAAEC,gBAAgB;IAAEC,SAAS;IAAEC;EAAe,CAAC,GACtEL,KAAK;EACP,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,IAAIK,UAAU,EAAE;MACdM,OAAO,CAAC,MAAM,CAAC;IACjB,CAAC,MAAM;MACLA,OAAO,CAAC,QAAQ,CAAC;IACnB;EACF,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMO,gBAAgB,GAAIC,EAAE,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,EAAE,OAAO,CAAC;EAC1B,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAG,oBAAmBH,IAAK,EAAE;MAAA,wBACzC;QAAM,SAAS,EAAC,cAAc;QAAA,uBAC5B;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA,QACZ,EACN,CAACJ,KAAK,CAACU,MAAM,gBACZ;QAAK,SAAS,EAAC,cAAc;QAAA,UAAC;MAAwB;QAAA;QAAA;QAAA;MAAA,QAAM,gBAE5D;QAAA,wBACE;UAAK,SAAS,EAAC,yBAAyB;UAAA,uBACtC;YACE,cAAW,YAAY;YACvB,SAAS,EAAC,kBAAkB;YAC5B,OAAO,EAAE,MAAMR,SAAS,EAAG;YAAA,UAC5B;UAED;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QACL,EACLF,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrB;UAAmB,SAAS,EAAC,gBAAgB;UAAA,WAC1CP,gBAAgB,CAACM,IAAI,CAACL,EAAE,CAAC,eAC1B,QAAC,UAAU;YACT,cAAc,EAAEJ,cAAe;YAC/B,IAAI,EAAES,IAAK;YACX,gBAAgB,EAAEX;UAAiB;YAAA;YAAA;YAAA;UAAA,QACnC;QAAA,GANMW,IAAI,CAACL,EAAE;UAAA;UAAA;UAAA;QAAA,QAQlB,CAAC;MAAA,gBAEL;IAAA;MAAA;MAAA;MAAA;IAAA;EACG,iBACL;AAEP,CAAC;AAAC,GAnDIV,MAAM;AAAA,KAANA,MAAM;AAqDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}