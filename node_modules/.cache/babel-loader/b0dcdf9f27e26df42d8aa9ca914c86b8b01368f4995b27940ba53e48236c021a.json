{"ast":null,"code":"var _jsxFileName = \"/Users/snewell/Documents/practice/React_shop_copy/react-shop/src/Basket/basket.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { emptyCart } from \"../redux/counter\";\nimport BasketItem from \"./basketItem\";\nimport \"./basket.scss\";\n\n// I think there should be a much better way to flag when an items qutity needs to be increased\n// I don't like the idea of creating an additional prop just to flag an external quantity increase\n// nothing I tried within the items.map() worked how I hoped\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Basket = props => {\n  _s();\n  const {\n    showBasket,\n    duplicateFound\n  } = props;\n  const {\n    basketListItems\n  } = useSelector(state => state.wishlist);\n  const [show, setShow] = useState(\"hidden\");\n  const [quantifiedList, setQuantifiedList] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (showBasket) {\n      setShow(\"show\");\n    } else {\n      setShow(\"hidden\");\n    }\n  }, [showBasket]);\n  useEffect(() => {\n    assignBasketListQuantities();\n  }, [basketListItems]);\n  const isDuplicate = id => {\n    return duplicateFound === id;\n  };\n  const assignBasketListQuantities = () => {\n    // for (const x of xs) { console.log(x); }\n    for (const item of basketListItems) {\n      // if(basketListItems.some())\n      const itemQuantity = basketListItems.filter(arr => {\n        // Just return the condition\n        if (arr.id === item.id) {\n          return true;\n        }\n        return false;\n      }).length;\n      const quantifiedItem = {\n        item: item,\n        quantity: itemQuantity\n      };\n      if (!quantifiedList.some(listItem => listItem.item.id === quantifiedItem.item.id)) {\n        setQuantifiedList([...quantifiedList, quantifiedItem]);\n        console.log(\"adding: \", quantifiedItem.item);\n      } else {\n        for (const item of quantifiedList) {\n          if (item.item.id === quantifiedItem.item.id) {\n            item.quantity = itemQuantity;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `basket basket--${show}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"basket-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Basket \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !quantifiedList.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nothing-text\",\n        children: \"There's nothing here yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"basket__clear-all-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            \"aria-label\": \"empty cart\",\n            className: \"button-with-text\",\n            onClick: () => dispatch(emptyCart()),\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), quantifiedList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"basket__item-container\",\n          children: /*#__PURE__*/_jsxDEV(BasketItem, {\n            item: item.item,\n            quantity: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, item.item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Basket, \"SI08ZAAVHfLhGWj1moSPivZYUFY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Basket;\nexport default Basket;\nvar _c;\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","emptyCart","BasketItem","Basket","props","showBasket","duplicateFound","basketListItems","state","wishlist","show","setShow","quantifiedList","setQuantifiedList","dispatch","assignBasketListQuantities","isDuplicate","id","item","itemQuantity","filter","arr","length","quantifiedItem","quantity","some","listItem","console","log","map"],"sources":["/Users/snewell/Documents/practice/React_shop_copy/react-shop/src/Basket/basket.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { emptyCart } from \"../redux/counter\";\nimport BasketItem from \"./basketItem\";\nimport \"./basket.scss\";\n\n// I think there should be a much better way to flag when an items qutity needs to be increased\n// I don't like the idea of creating an additional prop just to flag an external quantity increase\n// nothing I tried within the items.map() worked how I hoped\n\nconst Basket = (props) => {\n  const { showBasket, duplicateFound } = props;\n  const { basketListItems } = useSelector((state) => state.wishlist)\n  const [show, setShow] = useState(\"hidden\");\n  const [quantifiedList, setQuantifiedList] = useState([])\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (showBasket) {\n      setShow(\"show\");\n    } else {\n      setShow(\"hidden\");\n    }\n  }, [showBasket]);\n\n  useEffect(() => {\n    assignBasketListQuantities()\n  },[basketListItems])\n\n  const isDuplicate = (id) => {\n    return duplicateFound === id\n  }\n\n  const assignBasketListQuantities = () => {\n    // for (const x of xs) { console.log(x); }\n    for  (const item of basketListItems) {\n      // if(basketListItems.some())\n      const itemQuantity = basketListItems.filter(arr => {\n        // Just return the condition\n        if (arr.id === item.id) {\n          return true;\n        }\n          return false;\n      }).length;\n      const quantifiedItem = { item: item, quantity: itemQuantity}\n      if(!quantifiedList.some((listItem) => listItem.item.id === quantifiedItem.item.id)){\n        setQuantifiedList([...quantifiedList, quantifiedItem])\n        console.log(\"adding: \",quantifiedItem.item)\n      } else {\n        for (const item of quantifiedList){\n          if(item.item.id === quantifiedItem.item.id){\n            item.quantity = itemQuantity\n          }\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <div className={`basket basket--${show}`}>\n        <span className=\"basket-title\">\n          <h2> Basket </h2>\n        </span>\n        {!quantifiedList.length ? (\n          <div className=\"nothing-text\">There's nothing here yet</div>\n        ) : (\n          <>\n            <div className=\"basket__clear-all-button\">\n              <button\n                aria-label=\"empty cart\"\n                className=\"button-with-text\"\n                onClick={() => dispatch(emptyCart())}\n              >\n                Clear All\n              </button>\n            </div>\n            {quantifiedList.map((item) => (\n              <div key={item.item.id} className=\"basket__item-container\">\n                <BasketItem\n                  item={item.item}\n                  quantity={item.quantity}\n                />\n              </div>\n            ))}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Basket;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}